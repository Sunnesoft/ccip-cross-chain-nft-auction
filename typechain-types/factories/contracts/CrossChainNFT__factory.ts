/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import {
  Contract,
  ContractFactory,
  ContractTransactionResponse,
  Interface,
} from "ethers";
import type { Signer, ContractDeployTransaction, ContractRunner } from "ethers";
import type { NonPayableOverrides } from "../../common";
import type {
  CrossChainNFT,
  CrossChainNFTInterface,
} from "../../contracts/CrossChainNFT";

const _abi = [
  {
    inputs: [
      {
        internalType: "string",
        name: "name_",
        type: "string",
      },
      {
        internalType: "string",
        name: "symbol_",
        type: "string",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "approved",
        type: "address",
      },
      {
        indexed: true,
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "Approval",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "operator",
        type: "address",
      },
      {
        indexed: false,
        internalType: "bool",
        name: "approved",
        type: "bool",
      },
    ],
    name: "ApprovalForAll",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "previousOwner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "OwnershipTransferred",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        indexed: true,
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "Transfer",
    type: "event",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "approve",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "owner",
        type: "address",
      },
    ],
    name: "balanceOf",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "getApproved",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        internalType: "address",
        name: "operator",
        type: "address",
      },
    ],
    name: "isApprovedForAll",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
      {
        internalType: "string",
        name: "tokenURI",
        type: "string",
      },
    ],
    name: "mint",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "name",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "owner",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "ownerOf",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "renounceOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "safeTransferFrom",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
      {
        internalType: "bytes",
        name: "_data",
        type: "bytes",
      },
    ],
    name: "safeTransferFrom",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "operator",
        type: "address",
      },
      {
        internalType: "bool",
        name: "approved",
        type: "bool",
      },
    ],
    name: "setApprovalForAll",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes4",
        name: "interfaceId",
        type: "bytes4",
      },
    ],
    name: "supportsInterface",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "symbol",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "tokenURI",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "transferFrom",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "transferOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
] as const;

const _bytecode =
  "0x60806040523480156200001157600080fd5b5060405162001c7a38038062001c7a833981016040819052620000349162000193565b818160006200004483826200028c565b5060016200005382826200028c565b505050620000706200006a6200007860201b60201c565b6200007c565b505062000358565b3390565b600780546001600160a01b038381166001600160a01b0319831681179093556040519116919082907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e090600090a35050565b634e487b7160e01b600052604160045260246000fd5b600082601f830112620000f657600080fd5b81516001600160401b0380821115620001135762000113620000ce565b604051601f8301601f19908116603f011681019082821181831017156200013e576200013e620000ce565b816040528381526020925086838588010111156200015b57600080fd5b600091505b838210156200017f578582018301518183018401529082019062000160565b600093810190920192909252949350505050565b60008060408385031215620001a757600080fd5b82516001600160401b0380821115620001bf57600080fd5b620001cd86838701620000e4565b93506020850151915080821115620001e457600080fd5b50620001f385828601620000e4565b9150509250929050565b600181811c908216806200021257607f821691505b6020821081036200023357634e487b7160e01b600052602260045260246000fd5b50919050565b601f8211156200028757600081815260208120601f850160051c81016020861015620002625750805b601f850160051c820191505b8181101562000283578281556001016200026e565b5050505b505050565b81516001600160401b03811115620002a857620002a8620000ce565b620002c081620002b98454620001fd565b8462000239565b602080601f831160018114620002f85760008415620002df5750858301515b600019600386901b1c1916600185901b17855562000283565b600085815260208120601f198616915b82811015620003295788860151825594840194600190910190840162000308565b5085821015620003485787850151600019600388901b60f8161c191681555b5050505050600190811b01905550565b61191280620003686000396000f3fe608060405234801561001057600080fd5b506004361061010b5760003560e01c8063715018a6116100a2578063b88d4fde11610071578063b88d4fde1461021b578063c87b56dd1461022e578063d3fc986414610241578063e985e9c514610254578063f2fde38b1461026757600080fd5b8063715018a6146101e75780638da5cb5b146101ef57806395d89b4114610200578063a22cb4651461020857600080fd5b806323b872dd116100de57806323b872dd1461018d57806342842e0e146101a05780636352211e146101b357806370a08231146101c657600080fd5b806301ffc9a71461011057806306fdde0314610138578063081812fc1461014d578063095ea7b314610178575b600080fd5b61012361011e366004611272565b61027a565b60405190151581526020015b60405180910390f35b6101406102cc565b60405161012f91906112df565b61016061015b3660046112f2565b61035e565b6040516001600160a01b03909116815260200161012f565b61018b610186366004611327565b6103eb565b005b61018b61019b366004611351565b610500565b61018b6101ae366004611351565b610531565b6101606101c13660046112f2565b61054c565b6101d96101d436600461138d565b6105c3565b60405190815260200161012f565b61018b61064a565b6007546001600160a01b0316610160565b610140610680565b61018b6102163660046113a8565b61068f565b61018b610229366004611470565b610753565b61014061023c3660046112f2565b61078b565b61018b61024f3660046114ec565b610901565b610123610262366004611557565b61093f565b61018b61027536600461138d565b61096d565b60006001600160e01b031982166380ac58cd60e01b14806102ab57506001600160e01b03198216635b5e139f60e01b145b806102c657506301ffc9a760e01b6001600160e01b03198316145b92915050565b6060600080546102db9061158a565b80601f01602080910402602001604051908101604052809291908181526020018280546103079061158a565b80156103545780601f1061032957610100808354040283529160200191610354565b820191906000526020600020905b81548152906001019060200180831161033757829003601f168201915b5050505050905090565b600061036982610a08565b6103cf5760405162461bcd60e51b815260206004820152602c60248201527f4552433732313a20617070726f76656420717565727920666f72206e6f6e657860448201526b34b9ba32b73a103a37b5b2b760a11b60648201526084015b60405180910390fd5b506000908152600460205260409020546001600160a01b031690565b60006103f68261054c565b9050806001600160a01b0316836001600160a01b0316036104635760405162461bcd60e51b815260206004820152602160248201527f4552433732313a20617070726f76616c20746f2063757272656e74206f776e656044820152603960f91b60648201526084016103c6565b336001600160a01b038216148061047f575061047f813361093f565b6104f15760405162461bcd60e51b815260206004820152603860248201527f4552433732313a20617070726f76652063616c6c6572206973206e6f74206f7760448201527f6e6572206e6f7220617070726f76656420666f7220616c6c000000000000000060648201526084016103c6565b6104fb8383610a25565b505050565b61050a3382610a93565b6105265760405162461bcd60e51b81526004016103c6906115c4565b6104fb838383610b55565b6104fb83838360405180602001604052806000815250610753565b6000818152600260205260408120546001600160a01b0316806102c65760405162461bcd60e51b815260206004820152602960248201527f4552433732313a206f776e657220717565727920666f72206e6f6e657869737460448201526832b73a103a37b5b2b760b91b60648201526084016103c6565b60006001600160a01b03821661062e5760405162461bcd60e51b815260206004820152602a60248201527f4552433732313a2062616c616e636520717565727920666f7220746865207a65604482015269726f206164647265737360b01b60648201526084016103c6565b506001600160a01b031660009081526003602052604090205490565b6007546001600160a01b031633146106745760405162461bcd60e51b81526004016103c690611615565b61067e6000610cf5565b565b6060600180546102db9061158a565b336001600160a01b038316036106e75760405162461bcd60e51b815260206004820152601960248201527f4552433732313a20617070726f766520746f2063616c6c65720000000000000060448201526064016103c6565b3360008181526005602090815260408083206001600160a01b03871680855290835292819020805460ff191686151590811790915590519081529192917f17307eab39ab6107e8899845ad3d59bd9653f200f220920489ca2b5937696c31910160405180910390a35050565b61075d3383610a93565b6107795760405162461bcd60e51b81526004016103c6906115c4565b61078584848484610d47565b50505050565b606061079682610a08565b6107fc5760405162461bcd60e51b815260206004820152603160248201527f45524337323155524953746f726167653a2055524920717565727920666f72206044820152703737b732bc34b9ba32b73a103a37b5b2b760791b60648201526084016103c6565b600082815260066020526040812080546108159061158a565b80601f01602080910402602001604051908101604052809291908181526020018280546108419061158a565b801561088e5780601f106108635761010080835404028352916020019161088e565b820191906000526020600020905b81548152906001019060200180831161087157829003601f168201915b5050505050905060006108ac60408051602081019091526000815290565b905080516000036108be575092915050565b8151156108f05780826040516020016108d892919061164a565b60405160208183030381529060405292505050919050565b6108f984610d7a565b949350505050565b6007546001600160a01b0316331461092b5760405162461bcd60e51b81526004016103c690611615565b6109358383610e52565b6104fb8282610e70565b6001600160a01b03918216600090815260056020908152604080832093909416825291909152205460ff1690565b6007546001600160a01b031633146109975760405162461bcd60e51b81526004016103c690611615565b6001600160a01b0381166109fc5760405162461bcd60e51b815260206004820152602660248201527f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160448201526564647265737360d01b60648201526084016103c6565b610a0581610cf5565b50565b6000908152600260205260409020546001600160a01b0316151590565b600081815260046020526040902080546001600160a01b0319166001600160a01b0384169081179091558190610a5a8261054c565b6001600160a01b03167f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b92560405160405180910390a45050565b6000610a9e82610a08565b610aff5760405162461bcd60e51b815260206004820152602c60248201527f4552433732313a206f70657261746f7220717565727920666f72206e6f6e657860448201526b34b9ba32b73a103a37b5b2b760a11b60648201526084016103c6565b6000610b0a8361054c565b9050806001600160a01b0316846001600160a01b03161480610b455750836001600160a01b0316610b3a8461035e565b6001600160a01b0316145b806108f957506108f9818561093f565b826001600160a01b0316610b688261054c565b6001600160a01b031614610bd05760405162461bcd60e51b815260206004820152602960248201527f4552433732313a207472616e73666572206f6620746f6b656e2074686174206960448201526839903737ba1037bbb760b91b60648201526084016103c6565b6001600160a01b038216610c325760405162461bcd60e51b8152602060048201526024808201527f4552433732313a207472616e7366657220746f20746865207a65726f206164646044820152637265737360e01b60648201526084016103c6565b610c3d600082610a25565b6001600160a01b0383166000908152600360205260408120805460019290610c6690849061168f565b90915550506001600160a01b0382166000908152600360205260408120805460019290610c949084906116a2565b909155505060008181526002602052604080822080546001600160a01b0319166001600160a01b0386811691821790925591518493918716917fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef91a4505050565b600780546001600160a01b038381166001600160a01b0319831681179093556040519116919082907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e090600090a35050565b610d52848484610b55565b610d5e84848484610ef4565b6107855760405162461bcd60e51b81526004016103c6906116b5565b6060610d8582610a08565b610de95760405162461bcd60e51b815260206004820152602f60248201527f4552433732314d657461646174613a2055524920717565727920666f72206e6f60448201526e3732bc34b9ba32b73a103a37b5b2b760891b60648201526084016103c6565b6000610e0060408051602081019091526000815290565b90506000815111610e205760405180602001604052806000815250610e4b565b80610e2a84610ff5565b604051602001610e3b92919061164a565b6040516020818303038152906040525b9392505050565b610e6c8282604051806020016040528060008152506110f6565b5050565b610e7982610a08565b610edc5760405162461bcd60e51b815260206004820152602e60248201527f45524337323155524953746f726167653a2055524920736574206f66206e6f6e60448201526d32bc34b9ba32b73a103a37b5b2b760911b60648201526084016103c6565b60008281526006602052604090206104fb8282611755565b60006001600160a01b0384163b15610fea57604051630a85bd0160e11b81526001600160a01b0385169063150b7a0290610f38903390899088908890600401611815565b6020604051808303816000875af1925050508015610f73575060408051601f3d908101601f19168201909252610f7091810190611852565b60015b610fd0573d808015610fa1576040519150601f19603f3d011682016040523d82523d6000602084013e610fa6565b606091505b508051600003610fc85760405162461bcd60e51b81526004016103c6906116b5565b805181602001fd5b6001600160e01b031916630a85bd0160e11b1490506108f9565b506001949350505050565b60608160000361101c5750506040805180820190915260018152600360fc1b602082015290565b8160005b811561104657806110308161186f565b915061103f9050600a8361189e565b9150611020565b60008167ffffffffffffffff811115611061576110616113e4565b6040519080825280601f01601f19166020018201604052801561108b576020820181803683370190505b5090505b84156108f9576110a060018361168f565b91506110ad600a866118b2565b6110b89060306116a2565b60f81b8183815181106110cd576110cd6118c6565b60200101906001600160f81b031916908160001a9053506110ef600a8661189e565b945061108f565b6111008383611129565b61110d6000848484610ef4565b6104fb5760405162461bcd60e51b81526004016103c6906116b5565b6001600160a01b03821661117f5760405162461bcd60e51b815260206004820181905260248201527f4552433732313a206d696e7420746f20746865207a65726f206164647265737360448201526064016103c6565b61118881610a08565b156111d55760405162461bcd60e51b815260206004820152601c60248201527f4552433732313a20746f6b656e20616c7265616479206d696e7465640000000060448201526064016103c6565b6001600160a01b03821660009081526003602052604081208054600192906111fe9084906116a2565b909155505060008181526002602052604080822080546001600160a01b0319166001600160a01b03861690811790915590518392907fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef908290a45050565b6001600160e01b031981168114610a0557600080fd5b60006020828403121561128457600080fd5b8135610e4b8161125c565b60005b838110156112aa578181015183820152602001611292565b50506000910152565b600081518084526112cb81602086016020860161128f565b601f01601f19169290920160200192915050565b602081526000610e4b60208301846112b3565b60006020828403121561130457600080fd5b5035919050565b80356001600160a01b038116811461132257600080fd5b919050565b6000806040838503121561133a57600080fd5b6113438361130b565b946020939093013593505050565b60008060006060848603121561136657600080fd5b61136f8461130b565b925061137d6020850161130b565b9150604084013590509250925092565b60006020828403121561139f57600080fd5b610e4b8261130b565b600080604083850312156113bb57600080fd5b6113c48361130b565b9150602083013580151581146113d957600080fd5b809150509250929050565b634e487b7160e01b600052604160045260246000fd5b600067ffffffffffffffff80841115611415576114156113e4565b604051601f8501601f19908116603f0116810190828211818310171561143d5761143d6113e4565b8160405280935085815286868601111561145657600080fd5b858560208301376000602087830101525050509392505050565b6000806000806080858703121561148657600080fd5b61148f8561130b565b935061149d6020860161130b565b925060408501359150606085013567ffffffffffffffff8111156114c057600080fd5b8501601f810187136114d157600080fd5b6114e0878235602084016113fa565b91505092959194509250565b60008060006060848603121561150157600080fd5b61150a8461130b565b925060208401359150604084013567ffffffffffffffff81111561152d57600080fd5b8401601f8101861361153e57600080fd5b61154d868235602084016113fa565b9150509250925092565b6000806040838503121561156a57600080fd5b6115738361130b565b91506115816020840161130b565b90509250929050565b600181811c9082168061159e57607f821691505b6020821081036115be57634e487b7160e01b600052602260045260246000fd5b50919050565b60208082526031908201527f4552433732313a207472616e736665722063616c6c6572206973206e6f74206f6040820152701ddb995c881b9bdc88185c1c1c9bdd9959607a1b606082015260800190565b6020808252818101527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572604082015260600190565b6000835161165c81846020880161128f565b83519083019061167081836020880161128f565b01949350505050565b634e487b7160e01b600052601160045260246000fd5b818103818111156102c6576102c6611679565b808201808211156102c6576102c6611679565b60208082526032908201527f4552433732313a207472616e7366657220746f206e6f6e20455243373231526560408201527131b2b4bb32b91034b6b83632b6b2b73a32b960711b606082015260800190565b601f8211156104fb57600081815260208120601f850160051c8101602086101561172e5750805b601f850160051c820191505b8181101561174d5782815560010161173a565b505050505050565b815167ffffffffffffffff81111561176f5761176f6113e4565b6117838161177d845461158a565b84611707565b602080601f8311600181146117b857600084156117a05750858301515b600019600386901b1c1916600185901b17855561174d565b600085815260208120601f198616915b828110156117e7578886015182559484019460019091019084016117c8565b50858210156118055787850151600019600388901b60f8161c191681555b5050505050600190811b01905550565b6001600160a01b0385811682528416602082015260408101839052608060608201819052600090611848908301846112b3565b9695505050505050565b60006020828403121561186457600080fd5b8151610e4b8161125c565b60006001820161188157611881611679565b5060010190565b634e487b7160e01b600052601260045260246000fd5b6000826118ad576118ad611888565b500490565b6000826118c1576118c1611888565b500690565b634e487b7160e01b600052603260045260246000fdfea26469706673582212209dae8fba204e190fc7eb51e07496e6f39a1cca5c47a93194d1900046dbcfd8cb64736f6c63430008130033";

type CrossChainNFTConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: CrossChainNFTConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class CrossChainNFT__factory extends ContractFactory {
  constructor(...args: CrossChainNFTConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override getDeployTransaction(
    name_: string,
    symbol_: string,
    overrides?: NonPayableOverrides & { from?: string }
  ): Promise<ContractDeployTransaction> {
    return super.getDeployTransaction(name_, symbol_, overrides || {});
  }
  override deploy(
    name_: string,
    symbol_: string,
    overrides?: NonPayableOverrides & { from?: string }
  ) {
    return super.deploy(name_, symbol_, overrides || {}) as Promise<
      CrossChainNFT & {
        deploymentTransaction(): ContractTransactionResponse;
      }
    >;
  }
  override connect(runner: ContractRunner | null): CrossChainNFT__factory {
    return super.connect(runner) as CrossChainNFT__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): CrossChainNFTInterface {
    return new Interface(_abi) as CrossChainNFTInterface;
  }
  static connect(
    address: string,
    runner?: ContractRunner | null
  ): CrossChainNFT {
    return new Contract(address, _abi, runner) as unknown as CrossChainNFT;
  }
}
